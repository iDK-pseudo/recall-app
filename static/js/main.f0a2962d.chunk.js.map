{"version":3,"sources":["components/Header.js","components/Score.js","components/Card.js","components/Footer.js","icons/redo-solid.svg","components/GameOver.js","App.js","index.js"],"names":["Header","props","id","Score","score","bestScore","Card","pokemonIndex","alt","src","pokemonImages","pokemonInfo","name","Footer","onClick","handleFirstTimeClick","handleCantFoolMeClick","GameOver","handleResetClick","ResetLogo","App","state","passed","has","gameOver","addScoreandMoveForward","newIndex","Math","floor","random","setState","Set","isGameOver","addPoints","add","element","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAaA,EAAS,SAACC,GACnB,OACI,mBAAGC,GAAG,QAAN,uBCFKC,EAAQ,SAACF,GAClB,IAAOG,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,UACd,OACI,sBAAKH,GAAG,kBAAR,UACI,uCACA,4CACA,kCAAKE,EAAL,OACA,kCAAKC,EAAL,W,cCJCC,EAAM,SAACL,GAChB,IAAOM,EAAgBN,EAAhBM,aACP,OACI,qBAAKL,GAAG,iBAAR,SACI,sBAAKA,GAAG,OAAR,UACI,qBAAKM,IAAK,gBAAgBC,IAAKC,EAAcC,EAAYJ,GAAcK,QACvE,kCAAKD,EAAYJ,GAAcK,KAA/B,aCTHC,EAAS,SAACZ,GACnB,OACI,sBAAKC,GAAG,SAAR,UACI,wBAAQY,QAASb,EAAMc,qBAAvB,0BACA,wBAAQD,QAASb,EAAMe,sBAAvB,iCCJG,MAA0B,uCCE5BC,EAAW,SAAChB,GACrB,OACI,sBAAKC,GAAG,YAAR,UACI,mBAAGA,GAAG,cAAN,yBACA,qBAAKA,GAAG,eAAeY,QAASb,EAAMiB,iBAAtC,SACI,qBAAKT,IAAKU,EAAWX,IAAI,gBCiF1BY,G,wDA9Eb,WAAYnB,GAAO,IAAD,8BAChB,cAAMA,IAURc,qBAAuB,WACrB,MAA+B,EAAKM,MAA7BC,EAAP,EAAOA,OAAQf,EAAf,EAAeA,aACZe,EAAOC,IAAIhB,GACZ,EAAKiB,WAEL,EAAKC,uBAAuB,IAhBd,EAoBlBT,sBAAwB,WACtB,MAA+B,EAAKK,MAA7BC,EAAP,EAAOA,OAAQf,EAAf,EAAeA,aACZe,EAAOC,IAAIhB,GACZ,EAAKkB,uBAAuB,GAE5B,EAAKD,YAzBS,EA6BlBN,iBAAmB,WAEjB,IADA,IAAIQ,EAAW,GACRA,EAASC,KAAKC,MAAoB,GAAdD,KAAKE,aAAgB,EAAKR,MAAMd,eAC3D,EAAKuB,SAAS,CACZ1B,MAAO,EACPG,aAAcmB,EACdJ,OAAQ,IAAIS,IACZC,YAAY,KApCE,EAwClBR,SAAW,WACT,EAAKM,SAAS,CAACE,YAAY,KAzCX,EA4ClBP,uBAAyB,SAACQ,GAGxB,IAFA,MAA8C,EAAKZ,MAA5Cd,EAAP,EAAOA,aAAaH,EAApB,EAAoBA,MAAMC,EAA1B,EAA0BA,UAAUiB,EAApC,EAAoCA,OAChCI,EAAW,GACRA,EAASC,KAAKC,MAAoB,GAAdD,KAAKE,aAAgB,EAAKR,MAAMd,eAC3D,EAAKuB,SAAS,CACZvB,aAAcmB,EACdJ,OAAQA,EAAOY,IAAI3B,GACnBH,MAAOA,EAAM6B,EACb5B,UAAWA,EAAYD,EAAM6B,EAAY7B,EAAM6B,EAAY5B,KAlD7D,EAAKgB,MAAQ,CACXd,aAAcoB,KAAKC,MAAoB,GAAdD,KAAKE,UAC9BzB,MAAO,EACPC,UAAW,EACXiB,OAAQ,IAAIS,IACZC,YAAY,GAPE,E,0CAwDlB,WACE,IACIG,EADJ,EAAqDC,KAAKf,MAAnDd,EAAP,EAAOA,aAAcH,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,UAW5B,OARE8B,EAHF,EAAuCH,WAG3B,cAAC,EAAD,CAAUd,iBAAkBkB,KAAKlB,mBAGzC,eAAC,WAAD,WACE,cAAC,EAAD,CAAMX,aAAcA,IACpB,cAAC,EAAD,CAAQQ,qBAAsBqB,KAAKrB,qBAAsBC,sBAAuBoB,KAAKpB,2BAIzF,sBAAKd,GAAG,YAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOE,MAAOA,EAAOC,UAAWA,IAC/B8B,S,GAzESE,cCLlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f0a2962d.chunk.js","sourcesContent":["export const Header = (props) => {\r\n    return (\r\n        <p id=\"title\"> Recall </p>\r\n    );\r\n}","export const Score = (props) => {\r\n    const {score, bestScore} = props;\r\n    return (\r\n        <div id=\"score-container\">\r\n            <p> Score</p>\r\n            <p> Best Score</p>\r\n            <p> {score} </p>\r\n            <p> {bestScore} </p>\r\n        </div>\r\n    );\r\n}","import pokemonInfo from '../data/pokemon-info.json';\r\nimport pokemonImages from '../data/pokemon-images.json';\r\n\r\nexport const Card =(props) => {\r\n    const {pokemonIndex} = props;\r\n    return (\r\n        <div id=\"card-container\">\r\n            <div id=\"card\">\r\n                <img alt= \"Pokemon Image\" src={pokemonImages[pokemonInfo[pokemonIndex].name]}></img>\r\n                <p> {pokemonInfo[pokemonIndex].name} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export const Footer = (props) => {\r\n    return (\r\n        <div id=\"footer\">\r\n            <button onClick={props.handleFirstTimeClick}> First Time </button>\r\n            <button onClick={props.handleCantFoolMeClick}> Can't Fool Me </button>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/redo-solid.a5b2707d.svg\";","import ResetLogo from '../icons/redo-solid.svg'\r\n\r\nexport const GameOver = (props) => {\r\n    return (\r\n        <div id=\"game-over\">\r\n            <p id=\"game-over-p\"> Game Over </p>\r\n            <div id=\"reset-button\" onClick={props.handleResetClick}>\r\n                <img src={ResetLogo} alt=\"Reset\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { Header } from \"./components/Header.js\";\nimport { Score } from \"./components/Score.js\";\nimport { Card } from \"./components/Card.js\";\nimport { Footer } from \"./components/Footer.js\";\nimport { GameOver } from \"./components/GameOver.js\";\nimport \"./main.css\";\nimport { Component } from \"react\";\nimport { Fragment } from \"react\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      pokemonIndex: Math.floor(Math.random()*10),\n      score: 0,\n      bestScore: 0,\n      passed: new Set(),\n      isGameOver: false\n    }\n  }\n\n  handleFirstTimeClick = () => {\n    const {passed, pokemonIndex} = this.state;\n    if(passed.has(pokemonIndex)){\n      this.gameOver();\n    }else{\n      this.addScoreandMoveForward(1);\n    }\n  }\n\n  handleCantFoolMeClick = () =>{\n    const {passed, pokemonIndex} = this.state;\n    if(passed.has(pokemonIndex)){\n      this.addScoreandMoveForward(2);\n    }else{\n      this.gameOver();\n    }\n  }\n\n  handleResetClick = () =>{\n    let newIndex = 0;\n    while((newIndex=Math.floor(Math.random()*30))===this.state.pokemonIndex);\n    this.setState({\n      score: 0,\n      pokemonIndex: newIndex,\n      passed: new Set(),\n      isGameOver: false\n    });\n  }\n\n  gameOver = () => {\n    this.setState({isGameOver: true});\n  }\n\n  addScoreandMoveForward = (addPoints) => {\n    const {pokemonIndex,score,bestScore,passed} = this.state;\n    let newIndex = 0;\n    while((newIndex=Math.floor(Math.random()*30))===this.state.pokemonIndex);\n    this.setState({\n      pokemonIndex: newIndex, \n      passed: passed.add(pokemonIndex),\n      score: score+addPoints,\n      bestScore: bestScore < score+addPoints ? score+addPoints : bestScore,\n    });\n  }\n\n  render(){\n    const {pokemonIndex, score, bestScore, isGameOver} = this.state;\n    let element;\n    if(isGameOver){\n      element = <GameOver handleResetClick={this.handleResetClick} />\n    }else{\n      element = \n        <Fragment>\n          <Card pokemonIndex={pokemonIndex} />\n          <Footer handleFirstTimeClick={this.handleFirstTimeClick} handleCantFoolMeClick={this.handleCantFoolMeClick}/>\n        </Fragment>\n    }\n    return (\n      <div id=\"container\">\n        <Header/>\n        <Score score={score} bestScore={bestScore}/>\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}