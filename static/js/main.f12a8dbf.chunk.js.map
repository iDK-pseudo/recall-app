{"version":3,"sources":["components/Header.js","components/Score.js","components/Card.js","components/Footer.js","icons/redo-solid.svg","components/GameOver.js","icons/thumbs-up-solid.svg","icons/thumbs-down-solid.svg","components/Instructions.js","App.js","index.js"],"names":["Header","props","id","Score","score","bestScore","class","Card","pokemonIndex","alt","src","pokemonImages","pokemonInfo","name","Footer","onClick","handleCantFoolMeClick","handleFirstTimeClick","GameOver","handleResetClick","ResetLogo","Instructions","ThumbsUpLogo","ThumbsDownLogo","handlePlayClick","App","preloadImages","image","Image","state","passed","has","gameOver","addScoreandMoveForward","newIndex","Math","floor","random","setState","Set","isGameOver","play","addPoints","add","componentDidMount","element","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f12a8dbf.chunk.js","sourcesContent":["export const Header = (props) => {\r\n    return (\r\n        <p id=\"title\"> Recall </p>\r\n    );\r\n}","export const Score = (props) => {\r\n    const {score, bestScore} = props;\r\n    return (\r\n        <div id=\"score-container\">\r\n            <p class=\"score-title\"> Score</p>\r\n            <p class=\"score-title\"> Best Score</p>\r\n            <p class=\"score-value\"> {score} </p>\r\n            <p class=\"score-value\">  {bestScore} </p>\r\n        </div>\r\n    );\r\n}","import pokemonInfo from '../data/pokemon-info.json';\r\nimport pokemonImages from '../data/pokemon-images.json';\r\n\r\nexport const Card =(props) => {\r\n    const {pokemonIndex} = props;\r\n    return (\r\n        <div id=\"card-container\">\r\n            <div id=\"card\">\r\n                <img alt= \"Pokemon Image\" src={pokemonImages[pokemonInfo[pokemonIndex].name]}></img>\r\n                <p> {pokemonInfo[pokemonIndex].name} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export const Footer = (props) => {\r\n    return (\r\n        <div id=\"footer\">\r\n            <button onClick={props.handleCantFoolMeClick}> Seen </button>\r\n            <button onClick={props.handleFirstTimeClick}> First Time </button>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/redo-solid.a5b2707d.svg\";","import ResetLogo from '../icons/redo-solid.svg'\r\n\r\nexport const GameOver = (props) => {\r\n    return (\r\n        <div id=\"game-over\">\r\n            <p id=\"game-over-p\"> Game Over </p>\r\n            <div id=\"reset-button\" onClick={props.handleResetClick}>\r\n                <img src={ResetLogo} alt=\"Reset\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/thumbs-up-solid.93e65586.svg\";","export default __webpack_public_path__ + \"static/media/thumbs-down-solid.04abceb2.svg\";","import ThumbsUpLogo from '../icons/thumbs-up-solid.svg'\r\nimport ThumbsDownLogo from '../icons/thumbs-down-solid.svg'\r\n\r\nexport const Instructions = (props) => {\r\n    return (\r\n        <div>\r\n            <h1 class=\"instruction-title\"> The rules are simple</h1>\r\n            <ul class=\"instructions\">\r\n                <li> Press <img src={ThumbsUpLogo} alt=\"next\"/> if you are seeing the Pokemon for the <span> first time </span></li>\r\n                <p> +1 Point </p>\r\n                <li> Press  <img src={ThumbsDownLogo} alt=\"next\"/> if you have <span> already seen </span>that Pokemon</li>\r\n                <p> +2 Point </p>\r\n                <li> Any wrong guess will result in game over </li>\r\n            </ul>\r\n            <button class=\"play-button\" onClick={props.handlePlayClick}> Play ! </button>\r\n        </div>\r\n    )\r\n}","import { Header } from \"./components/Header.js\";\nimport { Score } from \"./components/Score.js\";\nimport { Card } from \"./components/Card.js\";\nimport { Footer } from \"./components/Footer.js\";\nimport { GameOver } from \"./components/GameOver.js\";\nimport \"./main.css\";\nimport { Component } from \"react\";\nimport { Fragment } from \"react\";\nimport pokemonImages from \"./data/pokemon-images.json\";\nimport { Instructions } from \"./components/Instructions.js\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      play: false,\n      pokemonIndex: Math.floor(Math.random()*50),\n      score: 0,\n      bestScore: 0,\n      passed: new Set(),\n      isGameOver: false\n    }\n  }\n\n  preloadImages = () => {\n    for(let image in pokemonImages){\n      new Image().src = pokemonImages[image];\n    }\n  }\n\n  handleFirstTimeClick = () => {\n    const {passed, pokemonIndex} = this.state;\n    if(passed.has(pokemonIndex)){\n      this.gameOver();\n    }else{\n      this.addScoreandMoveForward(1);\n    }\n  }\n\n  handleCantFoolMeClick = () =>{\n    const {passed, pokemonIndex} = this.state;\n    if(passed.has(pokemonIndex)){\n      this.addScoreandMoveForward(2);\n    }else{\n      this.gameOver();\n    }\n  }\n\n  handleResetClick = () =>{\n    let newIndex = 0;\n    while((newIndex=Math.floor(Math.random()*50))===this.state.pokemonIndex);\n    this.setState({\n      score: 0,\n      pokemonIndex: newIndex,\n      passed: new Set(),\n      isGameOver: false\n    });\n  }\n\n  handlePlayClick = () => {\n    this.setState({play: true});\n  }\n\n  gameOver = () => {\n    this.setState({isGameOver: true});\n  }\n\n  addScoreandMoveForward = (addPoints) => {\n    const {pokemonIndex,score,bestScore,passed} = this.state;\n    let newIndex = 0;\n    while((newIndex=Math.floor(Math.random()*50))===this.state.pokemonIndex);\n    this.setState({\n      pokemonIndex: newIndex, \n      passed: passed.add(pokemonIndex),\n      score: score+addPoints,\n      bestScore: bestScore < score+addPoints ? score+addPoints : bestScore,\n    });\n  }\n\n  componentDidMount = () => {\n    this.preloadImages();\n  }\n\n  render(){\n    const {pokemonIndex, score, bestScore, isGameOver, play} = this.state;\n    let element;\n    if(!play && !isGameOver){\n      element=<Instructions handlePlayClick={this.handlePlayClick}/>\n    }else if(isGameOver){\n      element = \n      <Fragment>\n        <Score score={score} bestScore={bestScore}/>\n        <GameOver handleResetClick={this.handleResetClick} />\n      </Fragment>\n    }else{\n      element = \n        <Fragment>\n          <Score score={score} bestScore={bestScore}/>\n          <Card pokemonIndex={pokemonIndex} />\n          <Footer handleFirstTimeClick={this.handleFirstTimeClick} handleCantFoolMeClick={this.handleCantFoolMeClick}/>\n        </Fragment>\n    }\n    return (\n      <div id=\"container\">\n        <Header/>\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}